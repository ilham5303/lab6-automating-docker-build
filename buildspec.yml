version: 0.2

phases:
  install:
    commands:
      - echo "Installing Helm..."
      - curl -fsSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
      - helm version

  pre_build:
    commands:
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REPOSITORY_URI
      - REPOSITORY_URI=$ECR_REPOSITORY_URI
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - echo "Setting up Kubeconfig for Helm..."
      - aws eks update-kubeconfig --name my-eks-cluster --region $AWS_DEFAULT_REGION
      - echo "Listing files in Docker build context:"
      - ls -R ./lab6-automating-docker-build/app

  build:
    commands:
      - echo "Building the Docker image..."
      - ls -R ./app
      - docker build -t $REPOSITORY_URI:latest -t $REPOSITORY_URI:$IMAGE_TAG ./app
      - echo "Pushing the Docker image to ECR..."
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo "Docker image build and push complete!"

      - echo "Packaging Helm Chart..."
      # Navigate to the correct Helm chart folder
      - cd ./my-flask-chart
      # Debug: list files to ensure Chart.yaml exists
      - echo "Listing files in Helm chart directory:"
      # Update image tag in values.yaml
      - 'sed -i.bak s|tag: latest|tag: $IMAGE_TAG| values.yaml'
      # Create output folder and package chart
      - mkdir -p output
      - helm package . -d output

  post_build:
    commands:
      - echo "Build completed successfully. Artifacts prepared."

artifacts:
  base-directory: my-flask-chart/output
  files:
    - my-flask-app-*.tgz
  discard-paths: yes
