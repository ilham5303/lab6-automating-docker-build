version: 0.2

phases:
  pre_build:
    commands:
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REPOSITORY_URI
      - echo "Logging in to Docker Hub..."
      - echo $DOCKER_HUB_PASSWORD | docker login -u $DOCKER_HUB_USERNAME --password-stdin
      - REPOSITORY_URI=$ECR_REPOSITORY_URI
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - echo "Setting up Kubeconfig for Helm..."
      - aws eks update-kubeconfig --name my-eks-cluster --region $AWS_DEFAULT_REGION
      - echo "EKS_CLUSTER_NAME=my-eks-cluster"
      - aws eks list-clusters --region $AWS_DEFAULT_REGION
      - echo "Listing files in Docker build context:"
      - ls -R ./app

  build:
    commands:
      - echo "Building the Docker image..."
      - docker build -t $REPOSITORY_URI:latest -t $REPOSITORY_URI:$IMAGE_TAG ./app

      - echo "Pushing the Docker image to ECR..."
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo "Docker image build and push complete!"

      - echo "Packaging Helm Chart..."
      - cd my-flask-chart
      - 'sed -i.bak "s|tag: latest|tag: $IMAGE_TAG|" values.yaml'
      - helm package .
      - mkdir -p ../output
      - mv *.tgz ../output/my-flask-app.tgz

  post_build:
    commands:
      - echo "Build completed successfully. Artifacts prepared."

artifacts:
  files:
    - my-flask-app.tgz
  base-directory: output
  discard-paths: yes
